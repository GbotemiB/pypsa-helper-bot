name: Deploy to Azure Container Instances

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  AZURE_RESOURCE_GROUP: pypsa-bot-rg
  AZURE_CONTAINER_NAME: pypsa-discord-bot
  AZURE_LOCATION: eastus
  DOCKERHUB_USERNAME: gbotemi  # Change this to your Docker Hub username
  DOCKER_IMAGE_NAME: pypsa-helper-bot

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        dns-name-label: pypsa-bot-${{ github.run_number }}
        image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        registry-login-server: docker.io
        registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
        registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
        name: ${{ env.AZURE_CONTAINER_NAME }}
        location: ${{ env.AZURE_LOCATION }}
        cpu: 2
        memory: 4
        restart-policy: Always
        environment-variables: |
          DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          GITHUB_REPO_OWNER=GbotemiB
          GITHUB_REPO_NAME=pypsa-helper-bot
        secure-environment-variables: |
          DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
    
    - name: Get Container URL
      run: |
        echo "### âœ… Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Container Name:** ${{ env.AZURE_CONTAINER_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Resource Group:** ${{ env.AZURE_RESOURCE_GROUP }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The Discord bot is now running on Azure Container Instances!" >> $GITHUB_STEP_SUMMARY
